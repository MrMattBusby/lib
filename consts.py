#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""Constants file, mainly for use with ~/bin/eq.

Forked from original, created Jan 2013.

Note

    DRY, derive all units from exact quantities

Cite

    http://physics.nist.gov/cuu/Constants/index.html
    http://www.atmosculator.com/The%20Standard%20Atmosphere.html?
    http://earth-info.nga.mil/GandG/publications/tr8350.2/wgs84fin.pdf
    http://www.onlineconversion.com

"""

import math

# Math utilities
#
INV_PI = 1. / math.pi
PI_2 = math.pi / 2.
PI_4 = math.pi / 4.
PI = math.pi
PI_SQ = PI * PI
SQRT_PI = math.sqrt(math.pi)
TWO_PI = 2. * PI
INV_SQRT_2 = 1. / math.sqrt(2)
SQRT_2 = math.sqrt(2)
SQRT_3 = math.sqrt(3)
BASE_E = math.e
INV_E = 1. / BASE_E
LN_10 = math.log(10)
LN_2 = math.log(2)
LN_3 = math.log(3)
LN_GAMMA = -0.54953931298164482234
LN_PI = math.log(math.pi)
EULERS = 0.57721566490153286061
GOLDEN_RATIO_PHI = 1.61803398874989484820
LN_PHI = 0.48121182505960344750
COS_1 = math.cos(1)
COSH_1 = math.cosh(1)
SIN_1 = math.sin(1)
SINH_1 = math.sinh(1)
TAN_1 = math.tan(1)
TANH_1 = math.tanh(1)

# Conversions -- Temperature
#


def R_TO_F(R):
    return R - 459.67


def R_TO_K(R):
    return R / 1.8


def C_TO_F(C):
    return (1.8 * C) + 32.


def C_TO_K(C):
    return C + 273.15


def F_TO_C(F):
    return (F - 32.) / 1.8


def F_TO_R(F):
    return F + 459.67


def F_TO_K(F):
    return R_TO_K(F_TO_R(F))


def K_TO_C(K):
    return K - 273.15


def K_TO_R(K):
    return K * 1.8


def K_TO_F(K):
    return R_TO_F(K_TO_R(K))

C_TO_K_OFFSET = 273.15
F_TO_R_OFFSET = 459.67
K_TO_C_OFFSET = -273.15
R_TO_F_OFFSET = -459.67
K_TO_R_CONST = 1.8
R_TO_K_CONST = 1. / 1.8

# Conversions -- Time
#

MIN_TO_SEC = (6.e+1)
HR_TO_SEC = (6.e+1 * MIN_TO_SEC)
DAY_TO_SEC = (2.4e+1 * HR_TO_SEC)
SEC_TO_DAY = (1. / DAY_TO_SEC)
SEC_TO_HR = (1. / HR_TO_SEC)
SEC_TO_MIN = (1. / MIN_TO_SEC)

# Conversions -- Length
#

FT_TO_IN = (1.2e+1)
IN_TO_CM = (2.54)
MI_TO_FT = (5.280e+3)
NM_TO_M = (1.852e+3)  # == EARTH_C_KM * 1000. / 360. / 60
FT_TO_M = (3.048e-1)
M_TO_FT = (1. / FT_TO_M)
CM_TO_IN = (1. / IN_TO_CM)
FT_TO_KM = (FT_TO_M * 1.e-3)
FT_TO_MM = (FT_TO_M * 1.e3)
NM_TO_FT = (NM_TO_M * M_TO_FT)
M_TO_IN = (M_TO_FT * FT_TO_IN)
IN_TO_MM = (IN_TO_CM * 1.e1)
MI_TO_M = (MI_TO_FT * FT_TO_M)
MI_TO_KM = (MI_TO_M * 1.e-3)
NM_TO_KM = (NM_TO_M * 1.e-3)
FT_TO_MI = (1. / MI_TO_FT)
NM_TO_MI = (NM_TO_FT * FT_TO_MI)
FT_TO_NM = (1. / NM_TO_FT)
IN_TO_FT = (1. / FT_TO_IN)
IN_TO_M = (1. / M_TO_IN)
KM_TO_FT = (1. / FT_TO_KM)
KM_TO_MI = (1. / MI_TO_KM)
KM_TO_NM = (1. / NM_TO_KM)
MI_TO_NM = (1. / NM_TO_MI)
MM_TO_FT = (1. / FT_TO_MM)
MM_TO_IN = (1. / IN_TO_MM)
M_TO_MI = (1. / MI_TO_M)
M_TO_NM = (1. / NM_TO_M)

# Constants -- Acceleration
#

SL_GRAV_MPS2 = (9.80665)  # Accepted average
SL_GRAV_FPS2 = (SL_GRAV_MPS2 * M_TO_FT)

# Conversions -- Length B
#

DEG_TO_NM = (60.)
DEG_TO_RAD = (PI / 180.)
REV_TO_DEG = (360.)
REV_TO_RAD = (2. * PI)
REV_TO_SC = (2.)
SC_TO_DEG = (180.)
SC_TO_RAD = (PI)
SC_TO_REV = (0.5)
RAD_TO_DEG = (1. / DEG_TO_RAD)
RAD_TO_NM = (RAD_TO_DEG * DEG_TO_NM)
DEG_TO_FT = (DEG_TO_NM * NM_TO_FT)
DEG_TO_REV = (1. / REV_TO_DEG)
DEG_TO_SC = (1. / SC_TO_DEG)
FT_TO_DEG = (1. / DEG_TO_FT)
NM_TO_DEG = (1. / DEG_TO_NM)
NM_TO_RAD = (1. / RAD_TO_NM)
RAD_TO_REV = (1. / REV_TO_RAD)
RAD_TO_SC = (1. / SC_TO_RAD)

# Conversions -- Angular
#

DPS_TO_NMPS = (DEG_TO_NM)
DPS_TO_FPS = (DPS_TO_NMPS * NM_TO_FT)
DPS_TO_KNOT = (DEG_TO_NM / SEC_TO_HR)
RPM_TO_RADPS = (REV_TO_RAD / MIN_TO_SEC)
FPS_TO_DPS = (1. / DPS_TO_FPS)
KNOT_TO_DPS = (1. / DPS_TO_KNOT)
NMPS_TO_DPS = (1. / DPS_TO_NMPS)
RADPS_TO_RPM = (1. / RPM_TO_RADPS)

# Conversions -- Mass
#

LB_TO_G = (453.59237)
LB_TO_KG = (LB_TO_G * 1.e-3)
G_TO_LB = (1. / LB_TO_G)
KG_TO_LB = (1. / LB_TO_KG)
SLUG_TO_KG = (SL_GRAV_FPS2 * LB_TO_KG)
KG_TO_SLUG = (1. / SLUG_TO_KG)

# Conversions -- Force
#

DYN_TO_N = (1.e-5)
KGF_TO_N = (SL_GRAV_MPS2)
LBF_TO_N = (LB_TO_KG * SL_GRAV_MPS2)
N_TO_DYN = (1. / DYN_TO_N)
N_TO_KGF = (1. / KGF_TO_N)
N_TO_LBF = (1. / LBF_TO_N)

# Conversions -- Length C
#

CM2_TO_M2 = (1.e-4)
M2_TO_CM2 = (1.e+4)
FT2_TO_IN2 = (FT_TO_IN * FT_TO_IN)
FT2_TO_M2 = (FT_TO_M * FT_TO_M)
FT2_TO_NM2 = (FT_TO_NM * FT_TO_NM)
FT3_TO_M3 = (FT_TO_M * FT_TO_M * FT_TO_M)
IN2_TO_FT2 = (1. / FT2_TO_IN2)
M2_TO_FT2 = (1. / FT2_TO_M2)
M3_TO_FT3 = (1. / FT3_TO_M3)
NM2_TO_FT2 = (1. / FT2_TO_NM2)

# Constants -- Pressure
#

SL_PRESS_ATM = (1.)
SL_PRESS_MMHG = (760.)
SL_PRESS_PA = (101325.)
SL_PRESS_INHG = (SL_PRESS_MMHG * 1.e-1 * CM_TO_IN)
SL_PRESS_KPA = (SL_PRESS_PA * 1.e-3)
SL_PRESS_MB = (SL_PRESS_KPA * 1.e+1)
SL_PRESS_PSF = (SL_PRESS_PA * KG_TO_LB / SL_GRAV_MPS2 * FT2_TO_M2)

# Conversions -- Velocity
#

FPS_TO_KNOT = (FT_TO_NM / SEC_TO_HR)
FPS_TO_MPS = (FT_TO_M)
KMPH_TO_MPS = (1.e+3 / HR_TO_SEC)
KNOT_TO_MPS = (NM_TO_M / HR_TO_SEC)
MIPH_TO_MPS = (MI_TO_M / HR_TO_SEC)
MPS_TO_FPS = (1. / FPS_TO_MPS)
KNOT_TO_FPS = (1. / FPS_TO_KNOT)
MPS_TO_KMPH = (1. / KMPH_TO_MPS)
MPS_TO_KNOT = (1. / KNOT_TO_MPS)
MPS_TO_MIPH = (1. / MIPH_TO_MPS)

# Constants -- Physical
#

SPEED_OF_LIGHT_MPS = (2.99792458e+8)  # Vaccuum
SPEED_OF_LIGHT_FPS = (SPEED_OF_LIGHT_MPS * MPS_TO_FPS)
GRAV_CONST_SI = (6.67384e-11)
BOLTZMAN_CONST_SI = (1.380622e-23)
AVOGADRO_CONST_SI = (6.022169e+26)
STD_GAS_CONST_SI = (8.31432e+3)

# Constants -- Sea Level / Standard Day
#

SL_TEMP_K = (288.15)  # STP (15 C)
SL_TEMP_GRAD_SI = (0.0065)
SL_GAMMA_AIR = (1.400)
SL_MOL_MASS_AIR_SI = (2.89644e+1)
SL_TEMP_C = (K_TO_C(SL_TEMP_K))
SL_TEMP_R = (K_TO_R(SL_TEMP_K))
SL_TEMP_F = (K_TO_F(SL_TEMP_K))
SL_TEMP_GRAD_EN = (K_TO_R(SL_TEMP_GRAD_SI) / M_TO_FT)
SL_SPEC_GAS_AIR_SI = (STD_GAS_CONST_SI / SL_MOL_MASS_AIR_SI)
SL_SPEC_GAS_AIR_EN = (
    SL_SPEC_GAS_AIR_SI *
    N_TO_LBF *
    M_TO_FT /
    KG_TO_SLUG /
    K_TO_R(1.))
SL_CS0_MPS = (pow(SL_GAMMA_AIR * SL_SPEC_GAS_AIR_SI * SL_TEMP_K, .5))
SL_CS0_FPS = (SL_CS0_MPS * MPS_TO_FPS)
SL_CS0_KNOTS = (SL_CS0_MPS * MPS_TO_KNOT)

SL_DENSITY_AIR_SI = (SL_PRESS_PA / (SL_SPEC_GAS_AIR_SI * SL_TEMP_K))
SL_DENSITY_AIR_EN = (SL_DENSITY_AIR_SI * KG_TO_SLUG / M3_TO_FT3)

# Constants -- Earth
#

EARTH_GM = (398600.4418)
EARTH_A_KM = (6378.137)
EARTH_1_F = (298.257223563)
EARTH_B_KM = (6356.7523)
EARTH_R_WGS_KM = (6371.0087714)
TROP_LOW_M = (-5000.)
TROP_HIGH_M = (11000.)
STRAT_LOW_M = TROP_HIGH_M
STRAT_HIGH_M = (20000.)
STRAT_LOW_PRES_RATIO = (0.223361116553795)
EARTH_C_NM = (REV_TO_DEG * DEG_TO_NM)
EARTH_C_KM = (EARTH_C_NM * NM_TO_KM)
EARTH_R_NM = (EARTH_C_NM / (2. * PI))
EARTH_R_KM = (EARTH_R_NM * NM_TO_KM)
EARTH_R_FT = (EARTH_R_NM * NM_TO_FT)
EARTH_A_NM = (EARTH_A_KM * KM_TO_NM)
EARTH_B_NM = (EARTH_B_KM * KM_TO_NM)
EARTH_R_WGS_NM = (EARTH_R_WGS_KM * KM_TO_NM)
EARTH_R_WGS_FT = (EARTH_R_WGS_KM * KM_TO_FT)

# Conversions -- Pressure
#

INHG_TO_PSF = (SL_PRESS_PSF / SL_PRESS_INHG)
INHG_TO_LBFT = (INHG_TO_PSF / (SL_DENSITY_AIR_EN * SL_GRAV_FPS2))
DYNPCM2_TO_PA = (1.e-1)
INHG_TO_MB = (SL_PRESS_MB / SL_PRESS_INHG)
INHG_TO_MMHG = (SL_PRESS_MMHG / SL_PRESS_INHG)
PSF_KGPM2 = (LB_TO_KG / (FT2_TO_M2))
KGPM2_PSF = (1. / PSF_KGPM2)
MB_TO_INHG = (SL_PRESS_INHG / SL_PRESS_MB)
MB_TO_MMHG = (SL_PRESS_MMHG / SL_PRESS_MB)
MB_TO_PSF = (SL_PRESS_PSF / SL_PRESS_MB)
MMHG_TO_INHG = (SL_PRESS_INHG / SL_PRESS_MMHG)
MMHG_TO_MB = (SL_PRESS_MB / SL_PRESS_MMHG)
MMHG_TO_PSF = (SL_PRESS_PSF / SL_PRESS_MMHG)
PA_TO_DYNPCM2 = (1. / DYNPCM2_TO_PA)
PSF_TO_INHG = (SL_PRESS_INHG / SL_PRESS_PSF)
PSF_TO_MB = (SL_PRESS_MB / SL_PRESS_PSF)
PSF_TO_MMHG = (SL_PRESS_MMHG / SL_PRESS_PSF)
PSF_TO_PSI = (1. / (FT2_TO_IN2))
PSI_TO_PSF = (1. / PSF_TO_PSI)

SL_PRESS_PSI = (SL_PRESS_PSF * PSF_TO_PSI)

# Special ASCII characters
#
ASCII_NUL = 0x00
ASCII_SOH = 0x01
ASCII_STX = 0x02
ASCII_ETX = 0x03
ASCII_EOT = 0x04
ASCII_ENQ = 0x05
ASCII_ACK = 0x06
ASCII_BEL = 0x07
ASCII_BS = 0x08
ASCII_HT = 0x09
ASCII_LF = 0x0a
ASCII_VT = 0x0b
ASCII_FF = 0x0c
ASCII_CR = 0x0d
ASCII_SO = 0x0e
ASCII_SI = 0x0f
ASCII_DLE = 0x10
ASCII_DC1 = 0x11
ASCII_DC2 = 0x12
ASCII_DC3 = 0x13
ASCII_DC4 = 0x14
ASCII_NAK = 0x15
ASCII_SYN = 0x16
ASCII_ETB = 0x17
ASCII_CAN = 0x18
ASCII_EM = 0x19
ASCII_SUB = 0x1a
ASCII_ESC = 0x1b
ASCII_FS = 0x1c
ASCII_GS = 0x1d
ASCII_RS = 0x1e
ASCII_US = 0x1f
ASCII_SPACE = 0x20
ASCII_BANG = 0x21
ASCII_QUOTE = 0x22
ASCII_APO = 0x27
ASCII_BCKSL = 0x5c
ASCII_TICK = 0x60
ASCII_DEL = 0x7f

# Size elements, bytes
#
SIZE_KB = 1024
SIZE_MB = 1048576
SIZE_GB = 1073741824
SIZE_TB = 1099511627776
SIZE_PB = 1125899906842624

# Size elements, bits
#
SIZE_BIT = 1
SIZE_SNIBBLE = 2
SIZE_NIBBLE = 4
SIZE_NICKEL = 5
SIZE_BYTE = 8
SIZE_OCTET = 8
SIZE_WORD = 16
SIZE_DWORD = 32
SIZE_QUADLET = 32
SIZE_GOBBLE = 48
SIZE_QWORD = 64
SIZE_OCTLET = 64
SIZE_PRGRPH = 256

# SI Unit Prefixes
#
SI_YOCTO = 1.e-24
SI_ZEPTO = 1.e-21
SI_ATTO = 1.e-18
SI_FEMTO = 1.e-15
SI_PICO = 1.e-12
SI_NANO = 1.e-09
SI_MICRO = 1.e-06
SI_MILLI = 1.e-03
SI_CENTI = 1.e-02
SI_DECI = 1.e-01
SI_DECA = 1.e+01
SI_HECTO = 1.e+02
SI_KILO = 1.e+03
SI_MEGA = 1.e+06
SI_GIGA = 1.e+09
SI_TERA = 1.e+12
SI_PETA = 1.e+15
SI_EXA = 1.e+18
SI_ZETTA = 1.e+21
SI_YOTTA = 1.e+24

# Powers of 2
#
POW_2_N32 = 2.32830643653869628906e-10
POW_2_N31 = 4.65661287307739257812e-10
POW_2_N30 = 9.31322574615478515625e-10
POW_2_N29 = 1.86264514923095703125e-09
POW_2_N28 = 3.72529029846191406250e-09
POW_2_N27 = 7.45058059692382812500e-09
POW_2_N26 = 1.49011611938476562500e-08
POW_2_N25 = 2.98023223876953125000e-08
POW_2_N24 = 5.96046447753906250000e-08
POW_2_N23 = 1.19209289550781250000e-07
POW_2_N22 = 2.38418579101562500000e-07
POW_2_N21 = 4.76837158203125000000e-07
POW_2_N20 = 9.53674316406250000000e-07
POW_2_N19 = 1.90734863281250000000e-06
POW_2_N18 = 3.81469726562500000000e-06
POW_2_N17 = 0.00000762939453125
POW_2_N16 = 0.0000152587890625
POW_2_N15 = 0.000030517578125
POW_2_N14 = 0.00006103515625
POW_2_N13 = 0.0001220703125
POW_2_N12 = 0.000244140625
POW_2_N11 = 0.00048828125
POW_2_N10 = 0.0009765625
POW_2_N9 = 0.001953125
POW_2_N8 = 0.00390625
POW_2_N7 = 0.0078125
POW_2_N6 = 0.015625
POW_2_N5 = 0.03125
POW_2_N4 = 0.0625
POW_2_N3 = 0.125
POW_2_N2 = 0.25
POW_2_N1 = 0.5
POW_2_0 = 1.
POW_2_1 = 2.
POW_2_2 = 4.
POW_2_3 = 8.
POW_2_4 = 16.
POW_2_5 = 32.
POW_2_6 = 64.
POW_2_7 = 128.
POW_2_8 = 256.
POW_2_9 = 512.
POW_2_10 = 1024.
POW_2_11 = 2048.
POW_2_12 = 4096.
POW_2_13 = 8192.
POW_2_14 = 16384.
POW_2_15 = 32768.
POW_2_16 = 65536.
POW_2_17 = 131072.
POW_2_18 = 262144.
POW_2_19 = 524288.
POW_2_20 = 1048576.
POW_2_21 = 2097152.
POW_2_22 = 4194304.
POW_2_23 = 8388608.
POW_2_24 = 16777216.
POW_2_25 = 33554432.
POW_2_26 = 67108864.
POW_2_27 = 134217728.
POW_2_28 = 268435456.
POW_2_29 = 536870912.
POW_2_30 = 1073741824.
POW_2_31 = 2147483648.

# Semicircle scaling
#
SC_N39 = 3.27418092638254165649e-10
SC_N38 = 6.54836185276508331298e-10
SC_N37 = 1.30967237055301666259e-09
SC_N36 = 2.61934474110603332519e-09
SC_N35 = 5.23868948221206665039e-09
SC_N34 = 1.04773789644241333007e-08
SC_N33 = 2.09547579288482666015e-08
SC_N32 = 4.19095158576965332031e-08
SC_N31 = 8.38190317153930664062e-08
SC_N30 = 1.67638063430786132812e-07
SC_N29 = 3.35276126861572265625e-07
SC_N28 = 6.70552253723144531250e-07
SC_N27 = 1.34110450744628906250e-06
SC_N26 = 2.68220901489257812500e-06
SC_N25 = 5.36441802978515625000e-06
SC_N24 = 1.07288360595703125000e-05
SC_N23 = 2.14576721191406250000e-05
SC_N22 = 4.29153442382812500000e-05
SC_N21 = 0.0000858306884765625
SC_N20 = 0.000171661376953125
SC_N19 = 0.00034332275390625
SC_N18 = 0.0006866455078125
SC_N17 = 0.001373291015625
SC_N16 = 0.00274658203125
SC_N15 = 0.0054931640625
SC_N14 = 0.010986328125
SC_N13 = 0.02197265625
SC_N12 = 0.0439453125
SC_N11 = 0.087890625
SC_N10 = 0.17578125
SC_N9 = 0.3515625
SC_N8 = 0.703125
SC_N7 = 1.40625
SC_N6 = 2.8125
SC_N5 = 5.625
SC_N4 = 11.25
SC_N3 = 22.5
SC_N2 = 45.
SC_N1 = 90.

# Custom scaling
# I.e. 1. / n
#
S_1_64000 = 0.000015625
S_1_32000 = 0.00003125
S_1_360 = 0.00277777777777777777778
S_1_180 = 0.00555555555555555555556
